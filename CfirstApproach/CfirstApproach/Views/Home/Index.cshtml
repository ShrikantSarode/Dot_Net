@model IEnumerable<CfirstApproach.Models.Employeee>

@{
    ViewData["Title"] = "Index";
}

<style>
    :root {
        --primary-color: #4158D0;
        --secondary-color: #C850C0;
        --accent-color: #FFCC70;
    }

    .dashboard-container {
        background: linear-gradient(43deg, var(--primary-color) 0%, var(--secondary-color) 46%, var(--accent-color) 100%);
        min-height: 100vh;
        padding: 2rem;
    }

    .profile-section {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
        border: 1px solid rgba(255, 255, 255, 0.18);
        color: white;
    }

    .profile-header {
        display: flex;
        align-items: center;
        gap: 2rem;
    }

    .profile-image {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        object-fit: cover;
        border: 4px solid white;
        box-shadow: 0 0 20px rgba(0,0,0,0.2);
        transition: transform 0.3s ease;
    }

        .profile-image:hover {
            transform: scale(1.05);
        }

    .profile-info h2 {
        margin: 0;
        font-size: 2rem;
        font-weight: 700;
    }

    .profile-stats {
        display: flex;
        gap: 2rem;
        margin-top: 1rem;
    }

    .stat-item {
        text-align: center;
        padding: 1rem;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 10px;
        min-width: 120px;
    }

    .employee-table {
        background: rgba(255, 255, 255, 0.9);
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    }

        .employee-table thead {
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            color: white;
        }

        .employee-table tbody tr {
            transition: all 0.3s ease;
        }

            .employee-table tbody tr:hover {
                background: rgba(200, 80, 192, 0.1);
                transform: translateY(-2px);
            }

    .action-btn {
        padding: 0.5rem 1rem;
        border-radius: 8px;
        transition: all 0.3s ease;
        border: none;
        color: white;
        text-decoration: none;
        display: inline-block;
        margin: 0 0.2rem;
    }

        .action-btn.edit {
            background: var(--primary-color);
        }

        .action-btn.details {
            background: var(--secondary-color);
        }

        .action-btn.delete {
            background: #ff4757;
        }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            color: white;
        }

    .add-new-btn {
        background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 1rem 2rem;
        border-radius: 30px;
        text-decoration: none;
        display: inline-block;
        margin-top: 2rem;
        transition: all 0.3s ease;
    }

        .add-new-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.3);
            color: white;
        }
</style>

<div class="dashboard-container container-fluid">
    <div class="profile-section">
        <div class="profile-header">
            <img src="https://via.placeholder.com/120" alt="Profile" class="profile-image">
            <div class="profile-info">
                <h2>Welcome, Admin</h2>
                <p>Employee Management Dashboard</p>
                <div class="profile-stats">
                    <div class="stat-item">
                        <h3>@Model.Count()</h3>
                        <p>Employees</p>
                    </div>
                    <div class="stat-item">
                        <h3>@Model.Select(e => e.City).Distinct().Count()</h3>
                        <p>Cities</p>
                    </div>
                    <div class="stat-item">
                        <h3>@Model.Average(e => e.Age).ToString("F1")</h3>
                        <p>Avg Age</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="employee-table">
        <table class="table mb-0">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Gender)</th>
                    <th>@Html.DisplayNameFor(model => model.Age)</th>
                    <th>@Html.DisplayNameFor(model => model.City)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                        <td>@Html.DisplayFor(modelItem => item.Age)</td>
                        <td>@Html.DisplayFor(modelItem => item.City)</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="action-btn edit">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="action-btn details">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="action-btn delete">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="text-end">
        <a asp-action="Create" class="add-new-btn">
            <i class="fas fa-plus-circle me-2"></i>Add New Employee
        </a>
    </div>
</div>
